services:
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: unless-stopped
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KC_HOSTNAME_STRICT_HTTPS: 'false'
      KC_HTTPS_CERTIFICATE_FILE: /etc/x509/https/server.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /etc/x509/https/server.key
    volumes:
      - ./keycloak/data:/opt/keycloak/data
      - ./keycloak/certs:/etc/x509/https
    ports:
      - "18080:8080"
      - "8443:8443"
    command:
      - start-dev
    depends_on:
      - db
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"

  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - keycloak
      - oauth2-proxy
      - httpbin
      - app
      - fluentd

    logging:
      driver: fluentd
      options:
        fluentd-address: "fluentd:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"

  httpbin:
    image: kennethreitz/httpbin
    restart: unless-stopped
    ports:
      - "8001:80"
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"

  oauth2-proxy:
    container_name: oauth2-proxy
    restart: unless-stopped
    hostname: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    ports:
      - 4180:4180
    environment:
      OAUTH2_PROXY_PROVIDER: oidc
      OAUTH2_PROXY_OIDC_EMAIL_CLAIM: email
      OAUTH2_PROXY_SCOPE: "openid"
      OAUTH2_PROXY_CODE_CHALLENGE_METHOD: S256
      # keycloakで設定したClient IDと同じ
      OAUTH2_PROXY_CLIENT_ID: oauth2-proxy
      # keycloakで取得したCredentials
      OAUTH2_PROXY_CLIENT_SECRET: "vkN5gl1dKuzsK5HkNYaKZ6mOkyXYfVQk"
      OAUTH2_PROXY_OIDC_ISSUER_URL: https://keycloak:8443/realms/myrealm
      OAUTH2_PROXY_OIDC_AUTH_URL: http://keycloak:8443/realms/myrealm/protocol/openid-connect/auth
      OAUTH2_PROXY_OIDC_REDEEM_URL: http://keycloak:8443/realms/myrealm/protocol/openid-connect/token
      OAUTH2_PROXY_OIDC_PROFILE_URL: http://keycloak:8443/realms/myrealm/protocol/openid-connect/userinfo
      OAUTH2_PROXY_OIDC_JWKS_URL: https://keycloak:8443/realms/myrealm/protocol/openid-connect/certs
      # OAUTH2_PROXY_COOKIE_SECRETは「python -c 'import os,base64; print(base64.urlsafe_b64encode(os.urandom(32)).decode())'」で生成可。
      OAUTH2_PROXY_COOKIE_SECRET: "5JEx-EnDmjnlN-1wd2EQDMrLLEly5NOUUSYsZCiy3Tc="
      # keycloakで設定したRealmの名前
      OAUTH2_PROXY_COOKIE_NAME: "myrealm"
      OAUTH2_PROXY_EMAIL_DOMAINS: "*"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_SSL_INSECURE_SKIP_VERIFY: "true"
      OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
      # 以下、HTTPS ではなく HTTP で動かすための設定
      OAUTH2_PROXY_REDIRECT_URL: http://localhost:8000/oauth2/callback
      OAUTH2_PROXY_COOKIE_SECURE: "false"
      OAUTH2_PROXY_COOKIE_REFRESH: "1m"
      OAUTH2_PROXY_COOKIE_EXPIRE: "29m"
      # OAUTH2_PROXY_COOKIE_EXPIRE: "12h"
      # OAUTH2_PROXY_COOKIE_SECURE: "true"
      # OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      # OAUTH2_PROXY_REVERSE_PROXY: "true"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "false"
    depends_on:
      - keycloak
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"
  
  db:
    image: postgres:17.5
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak_user
      POSTGRES_PASSWORD: keycloak_password
    #ports:
    #  - "5432:5432"
    volumes:
      - postgresql:/var/lib/postgresql/data
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"

  app:
    build: .
    restart: unless-stopped
    volumes:
      - "./:/app"
    ports:
      - "3000:3000"
    depends_on:
      - fluentd
    logging:
      driver: fluentd
      options:
        fluentd-address: "localhost:24224"
        tag: "docker.{{.Name}}"
        fluentd-async: "true"
        mode: "non-blocking"
        max-buffer-size: "8m"

  fluentd:
    image: fluent/fluentd:v1.16-1
    restart: unless-stopped
    container_name: fluentd
    volumes:
      - ./fluentd/conf:/fluentd/etc
      - ./fluentd/log:/fluentd/log
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    environment:
      FLUENTD_CONF: fluentd.conf

volumes:
  postgresql:
